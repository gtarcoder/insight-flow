services:
  # MongoDB服务
  mongodb:
    image: mongo:4.4
    container_name: insight-mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    volumes:
      - mongo_data:/data/db
    ports:
      - "27017:27017"
    networks:
      - app-network

  # Neo4j图数据库
  neo4j:
    image: neo4j:4.4
    container_name: insight-neo4j
    restart: unless-stopped
    environment:
      - NEO4J_AUTH=${NEO4J_AUTH}
      - NEO4J_dbms_memory_heap_initial__size=512m
      - NEO4J_dbms_memory_heap_max__size=1G
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    networks:
      - app-network

  # 向量数据库
  qdrant:
    image: qdrant/qdrant:latest
    container_name: insight-qdrant
    restart: unless-stopped
    volumes:
      - qdrant_data:/qdrant/storage
    ports:
      - "6333:6333"
      - "6334:6334"
    networks:
      - app-network

  # Redis缓存
  redis:
    image: redis:6-alpine
    container_name: insight-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - app-network

  # 后端API服务
  backend:
    build:
      context: ..
      dockerfile: ./docker/Dockerfile.backend
    container_name: insight-api
    restart: unless-stopped
    depends_on:
      - mongodb
      - neo4j
      - redis
      - qdrant
    environment:
      # 这些环境变量会覆盖config.yml中的相应设置
      - MONGODB_URI=mongodb://${MONGO_USER}:${MONGO_PASSWORD}@mongodb:27017/insight_flow?authSource=admin
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=${NEO4J_USER}
      - NEO4J_PASSWORD=${NEO4J_PASSWORD}
      - REDIS_URI=redis://:${REDIS_PASSWORD}@redis:6379/0
      - QDRANT_HOST=http://qdrant:6333
      - SECRET_KEY=${SECRET_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - WECHAT_APP_ID=${WECHAT_APP_ID}
      - WECHAT_APP_SECRET=${WECHAT_APP_SECRET}
      - ENVIRONMENT=production
    ports:
      - "8000:8000"
    networks:
      - app-network
    volumes:
      - ../src:/app/src
      - ../config.yml:/app/config.yml

  # 前端服务
  frontend:
    build:
      context: ..
      dockerfile: ./docker/Dockerfile.frontend
    container_name: insight-web
    restart: unless-stopped
    depends_on:
      - backend
    ports:
      - "3001:3000"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mongo_data:
  neo4j_data:
  neo4j_logs:
  qdrant_data:
  redis_data: 